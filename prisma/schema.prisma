generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                  String     @id @default(uuid()) @db.Uuid
  email               String     @unique
  name                String?
  contracts_remaining Int        @default(3)
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  password            String?
  provider            String     @default("credentials")
  role                Role       @default(FREE)
  contracts           Contract[]

  @@map("users")
}

model Contract {
  id                String   @id @default(uuid()) @db.Uuid  // Alterado para uuid
  title             String
  fileUrl           String
  fileName          String
  fileType          String
  content           String   @db.Text
  issues            Json    @default("[]")
  suggestedClauses  Json    @default("[]")
  metadata          Json    @default("{}")
  status            String   @default("pending")
  tempId            String?  @unique
  numPages          Int      @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  userId            String   @db.Uuid
  user              User?    @relation(fields: [userId], references: [id])
  
  @@index([userId])
}

model preview_cache {
  id         String    @id
  data       Json
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  expires_at DateTime? @default(dbgenerated("(CURRENT_TIMESTAMP + '24 hours'::interval)")) @db.Timestamptz(6)
}

enum Role {
  FREE
  PRO
}

enum Status {
  draft
  under_review
  approved
  rejected
}

enum contract_status {
  draft
  under_review
  approved
  rejected
}

enum ContractStatus {
  queued
  processing
  preview_ready
  under_review
  error
}
